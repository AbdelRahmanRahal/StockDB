-- first query : This query shows which products have been ordered the most by total quantity. It helps identify the most popular products, which can be useful for inventory management and marketing focus.
-- Top 5 Best-Selling Products by Quantity Ordered
SELECT p.product_name, SUM(oi.quantity) AS total_quantity_sold
FROM order_item oi
JOIN Product p ON oi.sku = p.sku
GROUP BY p.product_name
ORDER BY total_quantity_sold DESC
LIMIT 5;
-- second query : This shows the total sales revenue generated from each supplierâ€™s products. Suppliers with higher revenue might indicate stronger partnerships or more popular product lines.
--Total Revenue Generated by Each Supplier
SELECT s.supplier_name, SUM(o.revenue) AS total_revenue
FROM "Order" o
JOIN Supplier s ON o.supplier_id = s.supplier_id
GROUP BY s.supplier_name
ORDER BY total_revenue DESC;
-- third query: This breaks down how many users belong to each user type (Customer, Staff, Admin). Useful to understand the composition of your user base.
SELECT user_type, COUNT(*) AS count
FROM "User"
GROUP BY user_type;
-- fourth query : Lists all orders that have not been delivered yet, sorted by estimated delivery date. Helps logistics teams prioritize shipments and monitor pending orders.
--Orders Pending Delivery
SELECT 
    o.order_id, 
    u.first_name, 
    u.last_name, 
    o.order_date, 
    o.delivery_estimated
FROM "Order" o
JOIN Customer c ON o.customer_id = c.user_id
JOIN "User" u ON c.user_id = u.user_id
WHERE o.order_status = 'Pending'
ORDER BY o.delivery_estimated ASC;
-- fifth query : Shows current stock levels of all products and flags those with low stock (arbitrarily set here as less than 50 units). Useful for restocking decisions.
SELECT p.product_name, i.stock_level,
       CASE
         WHEN i.stock_level < 50 THEN 'Low Stock'
         ELSE 'Stock OK'
       END AS stock_status
FROM Inventory i
JOIN Product p ON i.sku = p.sku
ORDER BY i.stock_level ASC;




